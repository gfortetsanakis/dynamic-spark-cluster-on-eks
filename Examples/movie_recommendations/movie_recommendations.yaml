apiVersion: v1
kind: ConfigMap
metadata:
  name: movie-recommendations-app-configmap
  namespace: spark
data:
  INPUT_DATASET_PATH: "s3a://<spark_data_s3_bucket>/ml-1m/ratings.dat"
  OUTPUT_DATASET_PATH: "s3a://<spark_data_s3_bucket>/ml-1m/output"
  CHECKPOINT_DIR: "s3a://<spark_data_s3_bucket>/ml-1m/checkpoint"
  SPARK_EVENT_LOGS_DIR: "s3a://<spark_event_logs_s3_bucket>/logs/"
---

apiVersion: "sparkoperator.k8s.io/v1beta2"
kind: SparkApplication
metadata:
  name: movie-recommendations
  namespace: spark
spec:
  type: Python
  pythonVersion: "3"
  mode: cluster
  image: <movie_recommendation_image>
  imagePullPolicy: Always
  imagePullSecrets:
     - <movie_recommendation_image_pull_secret>
  mainApplicationFile: local:///opt/application/movie_recommendations.py
  sparkVersion: 3.2.1"
  sparkUIOptions:
    ingressAnnotations:
      cert-manager.io/cluster-issuer: cert-issuer
      kubernetes.io/ingress.class: nginx
    ingressTLS:
      - secretName: movie-recommendations-tls
        hosts:
          - <movie_recommendation_spark_UI_url>
  restartPolicy:
    type: Never
  driver:
    envFrom:
      - configMapRef:
          name: movie-recommendations-app-configmap
    cores: 1
    memory: "1024m"
    nodeSelector:
      eks.amazonaws.com/nodegroup: on_demand_group
    labels:
      version: 3.2.1
    serviceAccount: spark-operator-spark
  executor:
    cores: 1
    instances: 3
    memory: "1024m"
    nodeSelector:
      eks.amazonaws.com/nodegroup: spot_group
    labels:
      version: 3.2.1